}
data_comparison<-data.frame(data_comparison, alcohol_status = alc_as_str)
variables_test=c("sex", "age_consent", "ethnicity", "tumor_site", "smoking_status", "alcohol_status", "marital_status", "education_level", "hn1_m3a_sh_oral_sex", "hn1_treatgroup", "hn1_dv_BMI", "hn1_nb4_cb_comorb_index",  "hn1_nb5b_cb_t_best", "hn1_nb5c_cb_n_best", "hn1_nb5d_cb_m_best", "hn1_TNM_stage_best", "hn1_SNOMED_group", "Serology_complete", "HPVRNA", "HPV_summary")
data_comparison$age_consent <- as.numeric(data_comparison$age_consent)
data_comparison$hn1_dv_BMI <- as.numeric(data_comparison$hn1_dv_BMI)
chisq.test.simulate.p.values <- function(data, variable, by, ...) {
result <- list()
test_results <- stats::chisq.test(data[[variable]], data[[by]], simulate.p.value = TRUE)
result$p <- test_results$p.value
result$test <- test_results$method
result
}
tbl_new <- data_comparison %>% filter(!HPV_summary %in% c("unknown")) %>% select(all_of(variables_test)) %>% tbl_summary(by = HPV_summary,  sort = list(hn1_nb4_cb_comorb_index ~ "frequency"), label=list(sex ~ "Sex", age_consent ~ "Age", tumor_site = "Tumor site", smoking_status="Smoking status", alcohol_status = "Alcohol status", marital_status= "Marital status", education_level = "Education level", hn1_m3a_sh_oral_sex = "Oral sex (ever)", hn1_treatgroup = "Treatment", hn1_dv_BMI ="BMI", hn1_nb4_cb_comorb_index="Comorbidity", hn1_nb5b_cb_t_best="T-stage", hn1_nb5c_cb_n_best = "N-stage", hn1_nb5d_cb_m_best="M-stage", hn1_TNM_stage_best="TNM-stage", hn1_SNOMED_group="SNOMED group", Serology_complete ="Serology data"), type = all_continuous() ~ "continuous2", statistic = all_continuous() ~ c("{N_nonmiss}",
"{median} ({p25}, {p75})",
"{min}, {max}")) %>% add_p(., test=list(all_continuous() ~ "kruskal.test", all_categorical() ~ "chisq.test.simulate.p.values"), pvalue_fun = function(x) style_pvalue(x, digits = 2) ) %>% bold_labels()
tbl_new
variables_OPC <- c("sex", "age_consent", "smoking_status", "alcohol_status", "marital_status", "education_level", "hn1_m3a_sh_oral_sex", "hn1_treatgroup", "hn1_dv_BMI", "hn1_nb4_cb_comorb_index",  "hn1_nb5b_cb_t_best", "hn1_nb5c_cb_n_best", "hn1_nb5d_cb_m_best", "hn1_TNM_stage_best", "hn1_SNOMED_group", "Serology_complete", "HPVRNA", "HPVDNA", "HPV_summary")
overview_classification <- data_comparison %>% mutate(HPVRNA = HPVRNA %>% gsub("HPV\\d+", "HPV-driven", .) ) %>% select(HPVdriven_GB, HPVRNA, p16, HPV.ISH, HPV_summary) %>% filter(HPV_summary %in% c("HPV-driven", "Negative", "inconclusive")) %>% group_by(HPVdriven_GB, HPVRNA, p16, HPV.ISH, HPV_summary) %>% summarize(n = n()) %>% arrange(desc(n))
overview_classification %>% kable(caption = "Classification of all HNSCC cases with available HPV tumor data based on different biomarkers", col.names = c("p16 + DNA (GB)", "HPV RNA (DKFZ)", "p16 (Prof. Mehanna)", "HPV DNA-ISH (Prof. Mehanna)", "HPV classification", "N"))
tbl_OPC <- data_comparison %>% filter(tumor_site=="Oropharynx") %>% filter(!HPV_summary %in% c("unknown")) %>% filter(!Serology_complete=="Missing") %>% select(all_of(variables_OPC)) %>% tbl_summary(by = HPV_summary,  sort = list(hn1_nb4_cb_comorb_index ~ "frequency"), label=list(sex ~ "Sex", age_consent ~ "Age", tumor_site = "Tumor site", smoking_status="Smoking status", alcohol_status = "Alcohol status", marital_status= "Marital status", education_level = "Education level", hn1_m3a_sh_oral_sex = "Oral sex (ever)", hn1_treatgroup = "Treatment", hn1_dv_BMI ="BMI", hn1_nb4_cb_comorb_index="Comorbidity", hn1_nb5b_cb_t_best="T-stage", hn1_nb5c_cb_n_best = "N-stage", hn1_nb5d_cb_m_best="M-stage", hn1_TNM_stage_best="TNM-stage", hn1_SNOMED_group="SNOMED group", Serology_complete ="Serology data"), type = all_continuous() ~ "continuous2", statistic = all_continuous() ~ c("{N_nonmiss}",
"{median} ({p25}, {p75})",
"{min}, {max}")) %>% add_p(., test=list(all_continuous() ~ "kruskal.test", all_categorical() ~ "chisq.test.simulate.p.values"), pvalue_fun = function(x) style_pvalue(x, digits = 2) ) %>% bold_labels()
tbl_OPC
colnames(data_comparison)
data_comparison$EBER %>% table()
# clean up EBER data and combine with info on NPC/other HNSCC
data_comparison$EBER[which(data_comparison$EBER %in% c("", "Inconclusive", "Not done", "Requested result unavailable"))] <- NA
data_comparison$EBER %>% table()
npc_vec <- ifelse(data_comparison$tumor_site=="Nasopharynx", "NPC", "other HNSCC")
npc_vec %>% table()
data_comparison$EBER_NPC <- paste(data_comparison$EBER, npc_vec)
data_comparison$EBER_NPC %>% table()
data_comparison$EBER_NPC[grep("^NA", data_comparison$EBER_NPC)]
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
# Setup
setwd("U:/sensitive/Sero Projekte/Fabian/Studien/HN5000/analysis_antibody_patterns")
## load variables and data sets from assses_data.R
load("data_sets_variables.RData")
## libraries
library(tidyverse)
library(rsample)
library(broom)
library(factoextra)
library(densvis)
library(Rtsne)
library(dbscan)
library(ggplot2)
library(openxlsx)
library(gghighlight)
library(ggpubr)
library(knitr)
library(dplyr)
library(caret)
library(epiR)
library(gtsummary)
setwd("U:/sensitive/Sero Projekte/Fabian/Studien/HN5000/analysis_antibody_patterns")
# read new data from hisham
new_data_hisham <- read.xlsx("HN071 ISH p16.xlsx")
colnames(new_data_hisham)<-c("HN071ID", "p16", "HPV-ISH")
#bring old and new data into same format
old_data <- data %>% data.frame()
rownames(old_data) <- old_data %>% pull(ID) %>% as.character()
new_data <- new_data_hisham %>% filter(HN071ID %in% pull(old_data, ID))
rownames(new_data)<- new_data %>% pull(HN071ID) %>% as.character()
new_data <- new_data[match(old_data$ID, new_data$HN071ID), ]
#combine old and new data in one data frame
data_comparison <- data.frame(new_data, old_data, HPV_summary="unknown")
# summarize hishams results
result_hisham <- rep("unknown", times=dim(data_comparison)[[1]])
pos <- data_comparison %>% filter(p16==1) %>% filter(HPV.ISH==1) %>% pull(ID)
neg <- data_comparison %>% filter(p16==0) %>% filter(HPV.ISH==0) %>% pull(ID)
inconclusive <- data_comparison %>% filter(!p16 %in% c(0, 1, "", NA, ".")) %>% pull(ID)
inconclusive <- data_comparison %>% filter(!HPV.ISH %in% c(0, 1, "", NA, ".")) %>% pull(ID) %>% append(., inconclusive) %>% unique()
inconclusive <- data_comparison %>% filter(!p16==HPV.ISH) %>% pull(ID) %>% append(., inconclusive) %>% unique()
result_hisham[which(data_comparison$ID %in% pos)] <- "HPV-driven"
result_hisham[which(data_comparison$ID %in% neg)] <- "Negative"
result_hisham[which(data_comparison$ID %in% inconclusive)] <- "inconclusive"
data_comparison <- data.frame(HPVdriven_hisham = result_hisham, data_comparison)
# combine results; HPV RNA positivity trumps inconclusive results by hisham, but not negative ones!
pos <- data_comparison %>% filter(HPVdriven_hisham=="HPV-driven")%>% filter(!HPVdriven_all=="Negative") %>% pull(ID)
pos <- data_comparison %>% filter(HPVdriven_all=="HPV-driven") %>% filter(!HPVdriven_hisham=="Negative") %>% filter(!HPVdriven_GB == "Negative") %>% pull(ID) %>% append(., pos) %>% unique()
# if p16 neg and HPV ISH neg and not declared HPV-driven previously: clearly negative!
neg <- data_comparison %>% filter(HPVdriven_hisham=="Negative")%>% filter(!HPVdriven_all=="HPV-driven") %>% pull(ID)
neg <- data_comparison %>% filter(!HPVdriven_hisham=="HPV-driven") %>% filter(HPVdriven_all=="Negative") %>% pull(ID) %>% append(., neg) %>% unique()
neg <- data_comparison %>% filter(!HPVdriven_hisham=="HPV-driven") %>% filter(HPVdriven_all=="Negative") %>% pull(ID) %>% append(., neg) %>% unique()
inconclusive <- data_comparison %>% filter(!ID %in% pos) %>% filter(!ID %in% neg) %>% filter(!HPVRNA %in% c("NA", "")) %>% pull(ID)
inconclusive <- data_comparison %>% filter(!ID %in% pos) %>% filter(!ID %in% neg) %>% filter(!is.na(p16)) %>% pull(ID) %>% append(., inconclusive)
inconclusive <- pos[which(pos %in% neg)] %>% append(., inconclusive)
#find samples with completely contradictory results!
paradox <- data_comparison %>% filter(p16==1) %>% filter(HPV.ISH==1)%>% filter(HPVdriven_all=="Negative") %>% pull(ID)
paradox <- data_comparison %>% filter(p16==0) %>% filter(HPV.ISH==0)%>% filter(HPVdriven_all=="HPV-driven") %>% pull(ID) %>% append(., paradox)
# construct final dataset
data_comparison$HPV_summary[which(data_comparison$ID %in% inconclusive)]<-"inconclusive"
data_comparison$HPV_summary[which(data_comparison$ID %in% pos)]<-"HPV-driven"
data_comparison$HPV_summary[which(data_comparison$ID %in% neg)]<-"Negative"
#add simple 1/0 classification of tumors
data_comparison$HPV_dichotomized <- data_comparison$HPV_summary
data_comparison$HPV_dichotomized[which(data_comparison$HPV_dichotomized=="inconclusive")] <- NA
data_comparison$HPV_dichotomized <- ifelse(data_comparison$HPV_dichotomized=="HPV-driven", 1, 0)
# closer look at inconclusive samples
discordant <- filter(data_comparison, tumor_site == "2 - Oropharynx") %>% filter(HPV_summary =="inconclusive") %>% select(ID, HPVRNA, HPVDNA, HPVdriven_all, HN071ID, HPV.ISH, p16, HPV_summary) %>% filter(!HPVRNA=="")
discordant <- filter(data_comparison, tumor_site == "2 - Oropharynx") %>% filter(HPV_summary =="inconclusive") %>% select(ID, HPVRNA, HPVDNA, HPVdriven_all, HN071ID, HPV.ISH, p16, HPV_summary) %>% filter(!HPV.ISH==p16) %>% rbind(., discordant)
# add info about origin of sample
# determine origin of data:
hisham<-rep(FALSE, times=dim(data_comparison)[[1]])
hisham[which(!is.na(data_comparison$p16))]<-TRUE
dkfz<-rep(FALSE, times=dim(data_comparison)[[1]])
dkfz[which(!data_comparison$HPVRNA=="")]<-TRUE
gb<-rep(FALSE, times=dim(data_comparison)[[1]])
t1 <- which(data_comparison$HPVRNA=="")
t2 <- which(data_comparison$HPVdriven_all %in% c("HPV-driven", "Negative"))
gb[t1[which(t1 %in% t2)]]<-TRUE
#add info about origin of data to the dataframe
data_comparison <- data.frame(DKFZ=dkfz, GB=gb, Hisham=hisham, data_comparison)
#get rid of numbering of variables
for(i in 1:dim(data_comparison)[[2]]){
data_comparison[,i]<- gsub("\\d+ - ", "", data_comparison[,i])
}
data_hn5000 <- data_comparison
anno_hn5000 <- data_comparison %>% select(., !ends_with("sero")) %>% select(., !ends_with("levels")) %>% select(!contains(c("E1", "E2", "E6", "E7", "L1", "E4", "JCVP1", "BKVP1", "HPy"))) %>% select(!contains("dil10"))
sero_hn5000 <- data_comparison %>% select(., !ends_with("sero")) %>% select(., !ends_with("levels")) %>% select(contains(c("E1", "E2", "E6", "E7", "L1", "E4", "JCVP1", "BKVP1", "HPy"))) %>% select(!contains(c("Luminex", "_day", "Position", "Plate")))
ID_matching <- read.xlsx("VOYAGER_HN5000_ID_matching.xlsx", colNames=TRUE, rowNames=FALSE)
ID_matching <- ID_matching %>% na.omit()
rownames(anno_hn5000) <- NULL
anno_hn5000 <- anno_hn5000 %>% filter(ID %in% ID_matching$ID_HN5000)%>% mutate(HN5000_ID=ID) %>% column_to_rownames("ID")
anno_hn5000 <- anno_hn5000[ID_matching$ID_HN5000,]
anno_voyager_hn5000 <- anno_voyager_hn5000 %>% filter(Local_ID %in% ID_matching$ID_VOYAGER) %>% mutate(VOYAGER_ID=Local_ID) %>% column_to_rownames("Local_ID")
anno_voyager <- read.xlsx("VOYAGERHPVprojectSept232022.xlsx")
anno_voyager_hn5000 <- anno_voyager %>% filter(Study_name=="HN5000") %>% mutate(ID=Local_ID %>% as.numeric()) %>% arrange(ID)
sero_voyager_hn5000 <- read.xlsx("HN5000serologyinfoSept232022.xlsx")
sero_voyager_hn5000 <- read.xlsx("HN5000serologyinfoSept232022.xlsx")
sero_hn5000 <- sero_hn5000 %>% select(all_of(colnames(sero_hn5000)[which(colnames(sero_hn5000) %in% colnames(sero_voyager_hn5000))]))
sero_hn5000 <- sero_hn5000 %>% select(all_of(colnames(sero_hn5000)[which(colnames(sero_hn5000) %in% colnames(sero_voyager_hn5000))]))
sero_voyager_hn5000 <- sero_voyager_hn5000 %>% select(all_of(colnames(sero_voyager_hn5000)[which(colnames(sero_voyager_hn5000) %in% colnames(sero_hn5000))]))
cor_matrix=matrix(nrow=nrow(sero_hn5000), ncol=nrow(sero_voyager_hn5000))
colnames(cor_matrix) <- anno_voyager_hn5000$Local_ID
rownames(cor_matrix) <- anno_hn5000$ID
ccc.min <- function(vec1, vec2){
return(CCC(vec1, vec2)$rho.c$est)
}
sero_hn5000 <- sero_hn5000[,colnames(sero_voyager_hn5000)]
sero_hn5000 <- sero_hn5000 %>% data.frame() %>% apply(., 2, as.numeric) # %>% mutate(new_ID=tidyr::unite(., new_ID, colnames(.)))
sero_voyager_hn5000 <- sero_voyager_hn5000 %>% apply(., 2, as.numeric) %>% data.frame() %>% apply(., 2, round, digits=0) %>% data.frame()# %>% mutate(new_ID=tidyr::unite(., new_ID, colnames(.)))
ID_matching <- read.xlsx("VOYAGER_HN5000_ID_matching.xlsx", colNames=TRUE, rowNames=FALSE)
ID_matching <- ID_matching %>% na.omit()
rownames(anno_hn5000) <- NULL
anno_hn5000 <- anno_hn5000 %>% filter(ID %in% ID_matching$ID_HN5000)%>% mutate(HN5000_ID=ID) %>% column_to_rownames("ID")
ID_matching
colnames(anno_hn5000)
colnames(anno_hn5000)$HN071ID
anno_hn5000$HN071ID
anno_hn5000 <- data_comparison %>% select(., !ends_with("sero")) %>% select(., !ends_with("levels")) %>% select(!contains(c("E1", "E2", "E6", "E7", "L1", "E4", "JCVP1", "BKVP1", "HPy"))) %>% select(!contains("dil10"))
anno_hn5000 <- anno_hn5000 %>% filter(ID %in% ID_matching$ID_HN5000)%>% mutate(HN5000_ID=ID) %>% column_to_rownames("ID")
rownames(anno_hn5000) <- NULL
anno_hn5000 <- anno_hn5000 %>% filter(ID %in% ID_matching$ID_HN5000)%>% mutate(HN5000_ID=ID) %>% column_to_rownames("ID")
anno_hn5000 <- anno_hn5000[ID_matching$ID_HN5000,]
anno_voyager_hn5000 <- anno_voyager_hn5000 %>% filter(Local_ID %in% ID_matching$ID_VOYAGER) %>% mutate(VOYAGER_ID=Local_ID) %>% column_to_rownames("Local_ID")
anno_voyager_hn5000 <- anno_voyager_hn5000[ID_matching$ID_VOYAGER,]
anno_comparison <- anno_voyager_hn5000 %>% select(ID, Sex, Age, Race, HPV_statusP16, HPV_DNA_by_ISH, HPVserologystatus, TNM_T, TNM_N, TNM_M) %>% data.frame(., anno_hn5000 %>% select(sex, age_consent, HPV_summary, HPVdriven_hisham, HPVdriven_GB, HPVDNA, HPVRNA, p16, HPV.ISH, hn1_nb5b_cb_t_best, hn1_nb5c_cb_n_best, hn1_nb5d_cb_m_best))
table(anno_comparison$HPV_DNA_by_ISH, anno_comparison$HPV_summary)
anno_comparison %>% filter(HPV_statusP16=="Positive") %>% filter(p16==0) %>% View()
anno_comparison %>% filter(HPV_DNA_by_ISH=="Positive") %>% filter(p16==0) %>% View()
anno_comparison %>% pull(HPVserologystatus) %>% table()
colnames(anno_comparison)
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham %in% c("unknown", "inconclusive"))] <- NA
biomarker_variables <- c("HPV.ISH", "p16", "HPVdriven_hisham", "HPV_RNA_summary", "HPVDNA", "HPVserologystatus", "HPV_statusP16", "HPV_DNA_by_ISH")
biomarker_data <- anno_comparison %>% filter(!HPVserologystatus %in% c("invalid", "", " ", NA)) %>% mutate(HPV_RNA_summary = ifelse(HPVRNA=="negative", 0, 1))
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham %in% c("unknown", "inconclusive"))] <- NA
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "HPV-driven")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "Negative")] <- 0
biomarker_data$HPVDNA <- ifelse(biomarker_data$HPVDNA == "negative", 0, 1) %>% as.factor()
tbl_biomarker <- biomarker_data %>% select(all_of(biomarker_variables)) %>% tbl_summary(by = HPV_RNA_summary, label=list(HPV.ISH = "HPV DNA-ISH", p16="p16 IHC", HPVdriven_hisham = "p16 IHC plus HPV DNA-ISH", HPVDNA ~ "HPV DNA by hybridization"), type = all_continuous() ~ "continuous2") %>% add_stat(fns=everything() ~ sens) %>% add_stat(fns=everything() ~ spec)  %>% modify_header(add_stat_1 ~ "Sensitivity", add_stat_2 ~ "Specificity") %>% bold_labels()
sens <- function(data, variable, by, tbl, ...){
data <- data[which(data[,variable] %in% c(0,1)),]
ref <- data %>% pull(all_of(by)) %>% as.factor()
pred <- data %>% pull(all_of(variable)) %>% as.factor()
res_table <- confusionMatrix(data=pred, reference=ref, positive="1", mode="everything")
rval <- res_table$table[dim(res_table$table)[[1]]:1, dim(res_table$table)[[2]]:1] %>% epi.tests(., conf.level = 0.95)
sensspec <- rval$detail %>% filter(statistic %in% c("se"))
out <- paste(round(sensspec[1, "est"], digits = 2) , " (", round(sensspec[1, "lower"], digits = 2), "-", round(sensspec[1, "upper"], digits = 2), ")", sep="")
return(out)
}
spec <- function(data, variable, by, tbl, ...){
data <- data[which(data[,variable] %in% c(0,1)),]
ref <- data %>% pull(all_of(by)) %>% as.factor()
pred <- data %>% pull(all_of(variable)) %>% as.factor()
res_table <- confusionMatrix(data=pred, reference=ref, positive="1", mode="everything")
rval <- res_table$table[dim(res_table$table)[[1]]:1, dim(res_table$table)[[2]]:1] %>% epi.tests(., conf.level = 0.95)
sensspec <- rval$detail %>% filter(statistic %in% c("sp"))
out <- paste(round(sensspec[1, "est"], digits = 2) , " (", round(sensspec[1, "lower"], digits = 2), "-", round(sensspec[1, "upper"], digits = 2), ")", sep="")
return(out)
}
tbl_biomarker <- biomarker_data %>% select(all_of(biomarker_variables)) %>% tbl_summary(by = HPV_RNA_summary, label=list(HPV.ISH = "HPV DNA-ISH", p16="p16 IHC", HPVdriven_hisham = "p16 IHC plus HPV DNA-ISH", HPVDNA ~ "HPV DNA by hybridization"), type = all_continuous() ~ "continuous2") %>% add_stat(fns=everything() ~ sens) %>% add_stat(fns=everything() ~ spec)  %>% modify_header(add_stat_1 ~ "Sensitivity", add_stat_2 ~ "Specificity") %>% bold_labels()
biomarker_data %>% pull(HPV_statusP16) %>% table()
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16 %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Negative")] <- 0
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Positive")] <- 1
biomarker_data$HPV_statusP16 %>% table()
biomarker_data %>% View()
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Negative")] <- 0
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Positive")] <- 1
biomarker_data %>% View()
biomarker_variables <- c("HPV.ISH", "p16", "HPVdriven_hisham", "HPV_RNA_summary", "HPVDNA", "HPVserologystatus", "HPV_statusP16", "HPV_DNA_by_ISH")
biomarker_data <- anno_comparison %>% filter(!HPVserologystatus %in% c("invalid", "", " ", NA)) %>% mutate(HPV_RNA_summary = ifelse(HPVRNA=="negative", 0, 1))
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16 %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Negative")] <- 0
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Positive")] <- 1
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Negative")] <- 0
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Positive")] <- 1
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Negative")] <- 0
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Positive")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham %in% c("unknown", "inconclusive"))] <- NA
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "HPV-driven")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "Negative")] <- 0
biomarker_data$HPVDNA <- ifelse(biomarker_data$HPVDNA == "negative", 0, 1) %>% as.factor()
biomarker_data %>% View()
tbl_biomarker <- biomarker_data %>% select(all_of(biomarker_variables)) %>% tbl_summary(by = HPV_RNA_summary, label=list(HPV.ISH = "HPV DNA-ISH", p16="p16 IHC", HPVdriven_hisham = "p16 IHC plus HPV DNA-ISH", HPVDNA ~ "HPV DNA by hybridization"), type = all_continuous() ~ "continuous2") %>% add_stat(fns=everything() ~ sens) %>% add_stat(fns=everything() ~ spec)  %>% modify_header(add_stat_1 ~ "Sensitivity", add_stat_2 ~ "Specificity") %>% bold_labels()
tbl_biomarker
biomarker_data <- anno_comparison %>% filter(!HPVserologystatus %in% c("invalid", "", " ", NA)) %>% mutate(HPV_RNA_summary = ifelse(HPVRNA=="negative", 0, 1))
biomarker_data %>% pull(HPVDNA) %>% table()
biomarker_data$HPVDNA[biomarker_data$HPVDNA=="negative"] <- 0
biomarker_data$HPVDNA[biomarker_data$HPVDNA=="NA"] <- NA
biomarker_data$HPVDNA[!biomarker_data$HPVDNA %in% c("negative", NA)] <- 1
biomarker_data %>% pull(HPVDNA) %>% table()
biomarker_data <- anno_comparison %>% filter(!HPVserologystatus %in% c("invalid", "", " ", NA)) %>% mutate(HPV_RNA_summary = ifelse(HPVRNA=="negative", 0, 1))
biomarker_variables <- c("HPV.ISH", "p16", "HPV_RNA_summary", "HPVDNA", "HPVserologystatus", "HPV_statusP16", "HPV_DNA_by_ISH")
biomarker_data <- anno_comparison %>% filter(!HPVserologystatus %in% c("invalid", "", " ", NA)) %>% mutate(HPV_RNA_summary = ifelse(HPVRNA=="negative", 0, 1))
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16 %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Negative")] <- 0
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Positive")] <- 1
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Negative")] <- 0
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Positive")] <- 1
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Negative")] <- 0
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Positive")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham %in% c("unknown", "inconclusive"))] <- NA
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "HPV-driven")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "Negative")] <- 0
biomarker_data$HPVDNA[biomarker_data$HPVDNA=="negative"] <- 0
biomarker_data$HPVDNA[biomarker_data$HPVDNA=="NA"] <- NA
biomarker_data$HPVDNA[grep ("HPV", biomarker_data$HPVDNA )] <- 1
tbl_biomarker <- biomarker_data %>% select(all_of(biomarker_variables)) %>% tbl_summary(by = HPV_RNA_summary, label=list(HPV.ISH = "HPV DNA-ISH", p16="p16 IHC", HPVdriven_hisham = "p16 IHC plus HPV DNA-ISH", HPVDNA ~ "HPV DNA by hybridization"), type = all_continuous() ~ "continuous2") %>% add_stat(fns=everything() ~ sens) %>% add_stat(fns=everything() ~ spec)  %>% modify_header(add_stat_1 ~ "Sensitivity", add_stat_2 ~ "Specificity") %>% bold_labels()
tbl_biomarker
biomarker_variables <- c("HPV.ISH", "p16", "HPV_RNA_summary", "HPVDNA", "HPVserologystatus", "HPV_statusP16", "HPV_DNA_by_ISH")
biomarker_data <- anno_comparison %>% filter(!HPVserologystatus %in% c("invalid", "", " ", NA)) %>% mutate(HPV_RNA_summary = ifelse(HPVRNA=="negative", 0, 1))
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16 %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Negative")] <- 0
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Positive")] <- 1
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Negative")] <- 0
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Positive")] <- 1
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Negative")] <- 0
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Positive")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham %in% c("unknown", "inconclusive"))] <- NA
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "HPV-driven")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "Negative")] <- 0
biomarker_data$HPVDNA[biomarker_data$HPVDNA %in% c("negative", "negtaive")] <- 0
biomarker_data$HPVDNA[biomarker_data$HPVDNA %in% c("NA", "invalid", "Unknown")] <- NA
biomarker_data$HPVDNA[grep ("HPV", biomarker_data$HPVDNA )] <- 1
tbl_biomarker <- biomarker_data %>% select(all_of(biomarker_variables)) %>% tbl_summary(by = HPV_RNA_summary, label=list(HPV.ISH = "HPV DNA-ISH", p16="p16 IHC", HPVdriven_hisham = "p16 IHC plus HPV DNA-ISH", HPVDNA ~ "HPV DNA by hybridization"), type = all_continuous() ~ "continuous2") %>% add_stat(fns=everything() ~ sens) %>% add_stat(fns=everything() ~ spec)  %>% modify_header(add_stat_1 ~ "Sensitivity", add_stat_2 ~ "Specificity") %>% bold_labels()
tbl_biomarker
tbl_biomarker <- biomarker_data %>% select(all_of(biomarker_variables)) %>% tbl_summary(by = HPVserologystatus, label=list(HPV.ISH = "HPV DNA-ISH", p16="p16 IHC", HPVdriven_hisham = "p16 IHC plus HPV DNA-ISH", HPVDNA ~ "HPV DNA by hybridization"), type = all_continuous() ~ "continuous2") %>% add_stat(fns=everything() ~ sens) %>% add_stat(fns=everything() ~ spec)  %>% modify_header(add_stat_1 ~ "Sensitivity", add_stat_2 ~ "Specificity") %>% bold_labels()
tbl_biomarker
biomarker_data <- anno_comparison %>% filter(!HPVserologystatus %in% c("invalid", "", " ", NA))
biomarker_data %>% pull(HPVRNA) %>% table()
biomarker_data %>% pull(HPVRNA) %>% table()
biomarker_data$HPVRNA[grep("positive", biomarker_data$HPVRNA)] <- 1
biomarker_data %>% pull(HPVRNA) %>% table()
biomarker_data$HPVRNA[which(biomarker_data$HPVRNA %in% c("invalid", "NA", "HPV16?"))] <- NA
biomarker_data %>% pull(HPVRNA) %>% table()
biomarker_data$HPVRNA[grep("negative", biomarker_data$HPVRNA)] <- 0
biomarker_data %>% pull(HPVRNA) %>% table()
biomarker_data$HPVRNA[grep("HPV", biomarker_data$HPVRNA)] <- 1
biomarker_data %>% pull(HPVRNA) %>% table()
biomarker_variables <- c("HPV.ISH", "p16", "HPVRNA", "HPVDNA", "HPVserologystatus", "HPV_statusP16", "HPV_DNA_by_ISH")
biomarker_data <- anno_comparison %>% filter(!HPVserologystatus %in% c("invalid", "", " ", NA))
biomarker_data$HPVRNA[which(biomarker_data$HPVRNA %in% c("invalid", "NA", "HPV16?"))] <- NA
biomarker_data$HPVRNA[grep("positive", biomarker_data$HPVRNA)] <- 1
biomarker_data$HPVRNA[grep("negative", biomarker_data$HPVRNA)] <- 0
biomarker_data$HPVRNA[grep("HPV", biomarker_data$HPVRNA)] <- 1
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16 %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Negative")] <- 0
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Positive")] <- 1
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Negative")] <- 0
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Positive")] <- 1
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Negative")] <- 0
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Positive")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham %in% c("unknown", "inconclusive"))] <- NA
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "HPV-driven")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "Negative")] <- 0
biomarker_data$HPVDNA[biomarker_data$HPVDNA %in% c("negative", "negtaive")] <- 0
biomarker_data$HPVDNA[biomarker_data$HPVDNA %in% c("NA", "invalid", "Unknown")] <- NA
biomarker_data$HPVDNA[grep ("HPV", biomarker_data$HPVDNA )] <- 1
tbl_biomarker <- biomarker_data %>% select(all_of(biomarker_variables)) %>% tbl_summary(by = HPVserologystatus, label=list(HPV.ISH = "HPV DNA-ISH", p16="p16 IHC", HPVdriven_hisham = "p16 IHC plus HPV DNA-ISH", HPVDNA ~ "HPV DNA by hybridization"), type = all_continuous() ~ "continuous2") %>% add_stat(fns=everything() ~ sens) %>% add_stat(fns=everything() ~ spec)  %>% modify_header(add_stat_1 ~ "Sensitivity", add_stat_2 ~ "Specificity") %>% bold_labels()
tbl_biomarker
biomarker_variables <- c("HPV.ISH", "p16", "HPVRNA", "HPVDNA", "HPVserologystatus", "HPV_statusP16", "HPV_DNA_by_ISH")
biomarker_data <- anno_comparison %>% filter(!HPVserologystatus %in% c("invalid", "", " ", NA))
biomarker_data$HPVRNA[which(biomarker_data$HPVRNA %in% c("invalid", "NA", "HPV16?", ""))] <- NA
biomarker_data$HPVRNA[grep("positive", biomarker_data$HPVRNA)] <- 1
biomarker_data$HPVRNA[grep("negative", biomarker_data$HPVRNA)] <- 0
biomarker_data$HPVRNA[grep("HPV", biomarker_data$HPVRNA)] <- 1
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16 %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Negative")] <- 0
biomarker_data$HPV_statusP16[which(biomarker_data$HPV_statusP16=="Positive")] <- 1
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Negative")] <- 0
biomarker_data$HPV_DNA_by_ISH[which(biomarker_data$HPV_DNA_by_ISH=="Positive")] <- 1
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus %in% c("Unknown/not applicable", "Equivocal"))] <- NA
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Negative")] <- 0
biomarker_data$HPVserologystatus[which(biomarker_data$HPVserologystatus=="Positive")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham %in% c("unknown", "inconclusive"))] <- NA
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "HPV-driven")] <- 1
biomarker_data$HPVdriven_hisham[which(biomarker_data$HPVdriven_hisham == "Negative")] <- 0
biomarker_data$HPVDNA[biomarker_data$HPVDNA %in% c("negative", "negtaive")] <- 0
biomarker_data$HPVDNA[biomarker_data$HPVDNA %in% c("NA", "invalid", "Unknown", "")] <- NA
biomarker_data$HPVDNA[grep ("HPV", biomarker_data$HPVDNA )] <- 1
tbl_biomarker <- biomarker_data %>% select(all_of(biomarker_variables)) %>% tbl_summary(by = HPVserologystatus, label=list(HPV.ISH = "HPV DNA-ISH", p16="p16 IHC", HPVdriven_hisham = "p16 IHC plus HPV DNA-ISH", HPVDNA ~ "HPV DNA by hybridization"), type = all_continuous() ~ "continuous2") %>% add_stat(fns=everything() ~ sens) %>% add_stat(fns=everything() ~ spec)  %>% modify_header(add_stat_1 ~ "Sensitivity", add_stat_2 ~ "Specificity") %>% bold_labels()
tbl_biomarker
rm(list=ls())
load("U:/unprotected/Fabian/Sequences/HPV16_variants_aligned.RData")
source("U:/unprotected/Fabian/GitHub/PrimerDesign/R/primer_design_functions.R", echo=TRUE)
e2m_l1 <- hpv16_vars %>% filter_lengths() %>% splice(., donor=3632, acceptor=5639, start=3358, end=7156) %>% DNAStringSet()
library(dplyr)
e2m_l1 <- hpv16_vars %>% filter_lengths() %>% splice(., donor=3632, acceptor=5639, start=3358, end=7156) %>% DNAStringSet()
library(DECIPHER)
e2m_l1 <- hpv16_vars %>% filter_lengths() %>% splice(., donor=3632, acceptor=5639, start=3358, end=7156) %>% DNAStringSet()
e2m_l1
e2m_l1[[1]] %>% as.character()
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358)
primers_e2m_l1$best_candidates
primers_e2m_l1 %>% display_matched_sequences(., e2m_l1)
primers_e2m_l1$best_candidates %>% display_matched_sequences(., e2m_l1)
primers_e2m_l1$best_candidates[1,] %>% display_matched_sequences(., e2m_l1)
primers <- primers_e2m_l1$best_candidates[1,]
primers
sequences <- e2m_l1
sequences
seq_names<-c(primers$fwd_pot_mismatch, primers$rev_pot_mismatch, primers$probe_pot_mismatch) %>% strsplit(., split="_AND_") %>% unlist() %>% unique()
seq_names
prim_seq<-DNAStringSet(c(primers$fwd, primers$probe, primers$rev))
names(prim_seq)<-c("forward", "probe", "reverse")
prim_seq["reverse"] <- prim_seq["reverse"] %>% reverseComplement()
seqs<-sequences[which(names(sequences) %in% seq_names)]
seqs
al<- seqs %>% RemoveGaps() %>% AlignSeqs(., verbose=FALSE)
BrowseSeqs(al)
al<- seqs %>% append(prim_seq()) %>% RemoveGaps() %>% AlignSeqs(., verbose=FALSE)
BrowseSeqs(al)
al<- seqs %>% append(prim_seq) %>% RemoveGaps() %>% AlignSeqs(., verbose=FALSE)
BrowseSeqs(al)
primers_e2m_l1
primers_e2m_l1$best_candidates %>% pull(position_probe_delta) %>% hist()
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=3)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=3, seqs_aligned=TRUE)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=3)
e2m_l1
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=2)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358)
primers_e2m_l1$best_candidates
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_threshold = 0.2)
primers_e2m_l1
e2m_l1 <- hpv16_vars %>% filter_lengths() %>% AlignSeqs() %>% splice(., donor=3632, acceptor=5639, start=3358, end=7156) %>% DNAStringSet()
e2m_l1 <- hpv16_vars %>% filter_lengths() %>% RemoveGaps() %>% AlignSeqs() %>% splice(., donor=3632, acceptor=5639, start=3358, end=7156) %>% DNAStringSet()
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=3)
e2m_l1 %>% BrowseSeqs()
e2m_l1 <- e2m_l1[-c(9, 10)] %>% Align_seqs()
e2m_l1 <- e2m_l1[-c(9, 10)] %>% AlignSeqs()
e2m_l1 <- e2m_l1[-c(9, 10)] %>% RemoveGaps() %>% AlignSeqs()
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=3)
e2m_l1 %>% BrowseSeqs()
e2m_l1 %>% lapply(length)
lengths <- e2m_l1 %>% RemoveGaps() %>% lapply(length)
lengths %>% unlist() %>% max()
e2m_l1 <- e2m_l1[-c("LC644189.1 Human papillomavirus type 16 SW0112 DNA, complete genome")] %>% RemoveGaps() %>% AlignSeqs()
e2m_l1 <- e2m_l1[-"LC644189.1 Human papillomavirus type 16 SW0112 DNA, complete genome"] %>% RemoveGaps() %>% AlignSeqs()
e2m_l1 <- e2m_l1[-which(names(e2m_l1=="LC644189.1 Human papillomavirus type 16 SW0112 DNA, complete genome")] %>% RemoveGaps() %>% AlignSeqs()
e2m_l1 <- e2m_l1[-which(names(e2m_l1)=="LC644189.1 Human papillomavirus type 16 SW0112 DNA, complete genome")] %>% RemoveGaps() %>% AlignSeqs()
e2m_l1 %>% BrowseSeqs()
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=2)
primers_e2m_l1$best_candidates
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=2, max_repetitions = 4)
primers_e2m_l1$best_candidates
primers_e2m_l1$best_candidates[2,] %>% display_mismatched_sequences(., e2m_l1)
"ATGTCTCTTTGGCTGCCTAG" %>% DNAStringSet() %>% reverseComplement()
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=2, max_repetitions = 4, Tm_in=62)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=2, max_repetitions = 5, Tm_in=63)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=3, max_repetitions = 5, Tm_in=63, Tm_delta_max = 3)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=3, max_repetitions = 5, Tm_in=61, Tm_delta_max = 3)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=3, max_repetitions = 5, Tm_in=60, Tm_delta_max = 3)
primers_e2m_l1$best_candidates
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=5, max_repetitions = 5, Tm_in=60, Tm_delta_max = 3)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=5, mismatch_threshold = 0.1, max_repetitions = 5, Tm_in=60, Tm_delta_max = 3)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=5, mismatch_threshold = 0.1, max_repetitions = 5, Tm_in=62, Tm_delta_max = 3)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=5, mismatch_threshold = 0.1, max_repetitions = 5, Tm_in=62, Tm_delta_max = 3, amplicon_length_opt = 110)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=5, mismatch_threshold = 0.1, max_repetitions = 6, Tm_in=62, Tm_delta_max = 3, amplicon_length_opt = 70)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=5, mismatch_threshold = 0.1, max_repetitions = 6, Tm_in=62, Tm_delta_max = 3, amplicon_length_opt = 80)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=5, mismatch_threshold = 0.1, max_repetitions = 6, Tm_in=62, Tm_delta_max = 3, amplicon_length_opt = 80, gc_thres=20, min_dist=0)
primers_e2m_l1 <- e2m_l1 %>% design_primers(., seqs_aligned=TRUE, position_probe = 3632-3358, mismatch_tolerance=5, mismatch_threshold = 0.1, max_repetitions = 6, Tm_delta_max = 3, amplicon_length_opt = 80, gc_thres=20, min_dist=0)
primers_e2m_l1
rm(list=ls())
load("U:/unprotected/Fabian/Sequences/HPV16_variants_aligned.RData")
source("U:/unprotected/Fabian/GitHub/PrimerDesign/R/primer_design_functions.R", echo=TRUE)
library(DECIPHER)
library(dplyr)
l1 <- hpv16_vars %>% filter_lengths() %>% splice(., donor=1302, acceptor=5639, start=1100, end=7156) %>% DNAStringSet()
l1
library(DECIPHER)
library(dplyr)
"TCTACGTGTGTGCTTTGTACG" %>% DNAStringSet() %>% reverseComplement()
prim_rev <-"TCTACGTGTGTGCTTTGTACG" %>% DNAStringSet() %>% reverseComplement()
prim_fwd <- "AAGCAGAACCGGACAGAG" %>% DNAStringSet()
prim_fwd
probe <- "TGTTGCAAGTGTGACTCTACGCTTCG" %>% DNAStringSet()
load("U:/unprotected/Fabian/Sequences/HPV_types(excluding 16)_unaligned.RData")
?pairwiseAlignment
load("U:/unprotected/Fabian/Sequences/HPV_types(excluding 16)_unaligned.RData", type="local-global")
pairwiseAlignment(hpv_var_ref, prim_rev, type="local-global")
al <- pairwiseAlignment(hpv_var_ref, prim_rev, type="local-global", scoreOnly=TRUE)
max(al)
hpv_var_ref[which(al==max(al))]
hpv_var_ref[which(al==max(al))] %>% append(prim_rev) %>% RemoveGaps() %>% AlignSeqs() %>% BrowseSeqs()
al <- pairwiseAlignment(hpv_var_ref, prim_fwd, type="local-global", scoreOnly=TRUE)
hpv_var_ref[which(al==max(al))] %>% append(prim_fwd) %>% RemoveGaps() %>% AlignSeqs() %>% BrowseSeqs()
al <- pairwiseAlignment(hpv_var_ref, probe, type="local-global", scoreOnly=TRUE)
hpv_var_ref[which(al==max(al))] %>% append(probe) %>% RemoveGaps() %>% AlignSeqs() %>% BrowseSeqs()
al <- pairwiseAlignment(hpv_var_ref, "TGACTTTGCTTTTCGGGATT" %>% DNAStringSet(), type="local-global", scoreOnly=TRUE)
hpv_var_ref[which(al==max(al))] %>% append("TGACTTTGCTTTTCGGGATT" %>% DNAStringSet()) %>% RemoveGaps() %>% AlignSeqs() %>% BrowseSeqs()
library(dplyr)
anno_hn5000 %>% pull(tumor_site) %>% table()
data %>% filter(!is.na(HPV16E6)) %>% pull(tumor_site) %>% table()
data %>% filter(!is.na(HPV16E6)) %>% pull(HPV16E6) %>% table()
library(DECIPHER)
"GTCTATACTCACTAATTTTAGAATAAAACT" %>% DNAStringSet() %>% reverseComplement()
library(dplyr)
"GTCTATACTCACTAATTTTAGAATAAAACT" %>% DNAStringSet() %>% reverseComplement()
"TCTACGTGTGTGCTTTGTACG
" %>% DNAStringSet() %>% reverseComplement()
"TCTACGTGTGTGCTTTGTACG" %>% DNAStringSet() %>% reverseComplement()
"AATCATATACCTCAGATCGTTGC" %>% DNAStringSet() %>% reverseComplement()
library(DECIPHER)
library(dplyr)
"AGAAAGCGAGCTTAGTGATAC" %>% DNAStringSet() %>% reverseComplement()
log(0.1)
log(0.7)
10^0.1
10^0.7
2^0.7
2^0.1
View(anno_hn5000)
?textInput
?QIAcuityAnalysis
setwd("U:/sensitive/Nukleinsäuren/QIAcuity")
dir()
setwd("QIAcuityAnalysis")
devtools::load_all()
?summarizeQIAcuityResults
?QIAcuityAnalysis::summarizeQIAcuityResults
?QIAcuityAnalysis::summarizeQIAcuityResult
?summarizeQIAcuityResult
?summarizeQIAcuityResult
library(QIAcuityAnalysis)
?summarizeQIAcuityResult
devtools::document()
setwd(..)
setwd("..")
devtools::document()
devtools::document("../QIAcuityAnalysis")
getwd()
dir()
setwd("QIAcuityAnalysis")
dir()
devtools::document(getwd())
rm(list=ls())
devtools::document(getwd())
devtools::load_all()
library(shiny)
?p
?strong
ui <- fluidPage( # Application title
titlePanel("QIAcuity data analysis"),
mainPanel(
p("Please paste the path to a folder which contains raw data exported from the QIAcuity software."),
textInput("dir", "Path:", value=getwd()),
actionButton("setdir", "Select"),
strong("Currently selected path:"),
verbatimTextOutput("dir", placeholder = TRUE),
p("Plotting options:"),
checkboxInput("detailPlots", label="Generate 2D scatterplots"),
checkboxInput("scat1dPlots", label="Generate 1D scatterplots"),
actionButton("analyse", "Start analysis"),
actionButton('stop', 'Exit'),
verbatimTextOutput("done", placeholder = TRUE)
),
theme = bs_theme(version = 4, bootswatch = "darkly",
bg = "#dcdcdc", fg = "#003fa4", primary = "#4875c3", secondary ="#f55000", success="#c9c9c9",
base_font = font_google("Open Sans"),
code_font = font_google("Open Sans")))
if (!require("shinycssloader", quietly = TRUE))
install.packages("shinycssloader")
library(shinycssloader)
if (!require("shinycssloaders", quietly = TRUE))
install.packages("shinycssloaders")
library(shinycssloaders)
?renderText
